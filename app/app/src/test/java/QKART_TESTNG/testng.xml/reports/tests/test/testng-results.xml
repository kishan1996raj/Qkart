<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="10" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-11T12:16:34 IST" name="Gradle suite" finished-at="2023-12-11T12:20:53 IST" duration-ms="258275">
    <groups>
    </groups>
    <test started-at="2023-12-11T12:16:34 IST" name="Gradle test" finished-at="2023-12-11T12:20:53 IST" duration-ms="258275">
      <class name="QKART_TESTNG.QKART_Tests">
        <test-method is-config="true" signature="createDriver()[pri:0, instance:QKART_TESTNG.QKART_Tests@73d10270]" started-at="2023-12-11T12:16:31 IST" name="createDriver" finished-at="2023-12-11T12:16:34 IST" duration-ms="3305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDriver -->
        <test-method signature="TestCase01(java.lang.String,java.lang.String)[pri:0, instance:QKART_TESTNG.QKART_Tests@73d10270]" started-at="2023-12-11T12:16:34 IST" name="TestCase01" finished-at="2023-12-11T12:16:45 IST" duration-ms="10236" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[No input]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[No input]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Failed to login with registered user]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Failed to login with registered user
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at QKART_TESTNG.QKART_Tests.TestCase01(QKART_Tests.java:74)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
at com.sun.proxy.$Proxy2.stop(Unknown Source)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:175)
at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:157)
at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
at java.base/java.lang.Thread.run(Thread.java:829)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase01 -->
        <test-method signature="TestCase02()[pri:0, instance:QKART_TESTNG.QKART_Tests@73d10270]" started-at="2023-12-11T12:16:45 IST" name="TestCase02" finished-at="2023-12-11T12:17:20 IST" duration-ms="35158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase02 -->
        <test-method signature="TestCase03()[pri:0, instance:QKART_TESTNG.QKART_Tests@73d10270]" started-at="2023-12-11T12:17:20 IST" name="TestCase03" finished-at="2023-12-11T12:17:55 IST" duration-ms="34978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase03 -->
        <test-method signature="TestCase04()[pri:0, instance:QKART_TESTNG.QKART_Tests@73d10270]" started-at="2023-12-11T12:17:55 IST" name="TestCase04" finished-at="2023-12-11T12:18:17 IST" duration-ms="22321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase04 -->
        <test-method signature="TestCase05()[pri:0, instance:QKART_TESTNG.QKART_Tests@73d10270]" started-at="2023-12-11T12:18:17 IST" name="TestCase05" finished-at="2023-12-11T12:18:44 IST" duration-ms="27335" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase05 -->
        <test-method signature="TestCase06()[pri:0, instance:QKART_TESTNG.QKART_Tests@73d10270]" started-at="2023-12-11T12:18:44 IST" name="TestCase06" finished-at="2023-12-11T12:19:13 IST" duration-ms="28946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase06 -->
        <test-method signature="TestCase07()[pri:0, instance:QKART_TESTNG.QKART_Tests@73d10270]" started-at="2023-12-11T12:19:13 IST" name="TestCase07" finished-at="2023-12-11T12:19:58 IST" duration-ms="44843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase07 -->
        <test-method signature="TestCase08()[pri:0, instance:QKART_TESTNG.QKART_Tests@73d10270]" started-at="2023-12-11T12:19:58 IST" name="TestCase08" finished-at="2023-12-11T12:20:17 IST" duration-ms="19243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase08 -->
        <test-method signature="TestCase09()[pri:0, instance:QKART_TESTNG.QKART_Tests@73d10270]" started-at="2023-12-11T12:20:17 IST" name="TestCase09" finished-at="2023-12-11T12:20:26 IST" duration-ms="8254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase09 -->
        <test-method signature="TestCase10()[pri:0, instance:QKART_TESTNG.QKART_Tests@73d10270]" started-at="2023-12-11T12:20:26 IST" name="TestCase10" finished-at="2023-12-11T12:20:28 IST" duration-ms="2294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase10 -->
        <test-method signature="TestCase11()[pri:0, instance:QKART_TESTNG.QKART_Tests@73d10270]" started-at="2023-12-11T12:20:28 IST" name="TestCase11" finished-at="2023-12-11T12:20:52 IST" duration-ms="24476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCase11 -->
        <test-method is-config="true" signature="quitDriver()[pri:0, instance:QKART_TESTNG.QKART_Tests@73d10270]" started-at="2023-12-11T12:20:53 IST" name="quitDriver" finished-at="2023-12-11T12:20:53 IST" duration-ms="72" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitDriver -->
      </class> <!-- QKART_TESTNG.QKART_Tests -->
    </test> <!-- Gradle test -->
  </suite> <!-- Gradle suite -->
</testng-results>
